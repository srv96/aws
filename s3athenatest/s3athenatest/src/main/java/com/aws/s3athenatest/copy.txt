private static void processExtractedContent(File file, String insideParentheses, List<SqlQueryInfo> sqlQueryList) {
    // Remove leading and trailing spaces
    insideParentheses = insideParentheses.trim();

    // Find the index of the first comma
    int firstCommaIndex = insideParentheses.indexOf(',');

    if (firstCommaIndex != -1) {
        // Extract the reportId (assuming it's the first number)
        String reportIdString = insideParentheses.substring(0, firstCommaIndex).trim();

        // Find the index of the second comma
        int secondCommaIndex = insideParentheses.indexOf(',', firstCommaIndex + 1);

        if (secondCommaIndex != -1) {
            // Extract the sqlId (assuming it's the second number)
            String sqlIdString = insideParentheses.substring(firstCommaIndex + 1, secondCommaIndex).trim();

            // Extract the rest of the content (query and sysdate)
            String restOfContent = insideParentheses.substring(secondCommaIndex + 1).trim();

            // Find the index of the single quote, assuming it marks the start of the query
            int quoteIndex = restOfContent.indexOf('\'');

            if (quoteIndex != -1) {
                // Find the index of the next single quote after the starting quote
                int endQuoteIndex = restOfContent.indexOf('\'', quoteIndex + 1);

                if (endQuoteIndex != -1) {
                    // Extract the sqlQuery
                    String sqlQuery = restOfContent.substring(quoteIndex + 1, endQuoteIndex);

                    // Create SqlQueryInfo and add to the list
                    try {
                        int reportId = Integer.parseInt(reportIdString);
                        int sqlId = Integer.parseInt(sqlIdString);

                        String fileName = file.getName().replace("On-Boarding Sqls - ", "").replace(".sql", "");

                        sqlQueryList.add(new SqlQueryInfo(reportId, fileName, sqlId, sqlQuery));
                    } catch (NumberFormatException e) {
                        // Handle parsing errors if needed
                        e.printStackTrace();
                    }
                }
            }
        }
    }
}
