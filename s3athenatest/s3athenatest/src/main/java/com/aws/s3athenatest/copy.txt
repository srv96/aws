public class DummyClass {
    private int id;
    private String name;
    private double price;
    private boolean available;

    public DummyClass() {
        // Default constructor
    }

    public DummyClass(int id, String name, double price, boolean available) {
        this.id = id;
        this.name = name;
        this.price = price;
        this.available = available;
    }

    // Getters and setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }

    public boolean isAvailable() {
        return available;
    }

    public void setAvailable(boolean available) {
        this.available = available;
    }

    // Override toString() method for debugging purposes
    @Override
    public String toString() {
        return "DummyClass{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", price=" + price +
                ", available=" + available +
                '}';
    }
}


import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public class DummyClassTest {

    @Test
    public void testDummyClass() {
        // Create a DummyClass object
        DummyClass dummy = new DummyClass(1, "Dummy Object", 9.99, true);

        // Test the getters
        Assertions.assertEquals(1, dummy.getId());
        Assertions.assertEquals("Dummy Object", dummy.getName());
        Assertions.assertEquals(9.99, dummy.getPrice());
        Assertions.assertTrue(dummy.isAvailable());

        // Test the setters
        dummy.setId(2);
        dummy.setName("Updated Dummy Object");
        dummy.setPrice(19.99);
        dummy.setAvailable(false);

        // Test the updated values
        Assertions.assertEquals(2, dummy.getId());
        Assertions.assertEquals("Updated Dummy Object", dummy.getName());
        Assertions.assertEquals(19.99, dummy.getPrice());
        Assertions.assertFalse(dummy.isAvailable());

        // Test the toString() method
        String expectedString = "DummyClass{id=2, name='Updated Dummy Object', price=19.99, available=false}";
        Assertions.assertEquals(expectedString, dummy.toString());
    }
}


