import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.athena.AthenaClient;
import software.amazon.awssdk.services.athena.model.*;

public class AthenaPreparedStatementExample {

    public static void main(String[] args) {
        AthenaClient client = AthenaClient.builder()
                .region(Region.US_EAST_1)
                .build();

        String query = "SELECT * FROM my_table WHERE column1 = ? AND column2 = ?";

        PreparedStatementInput input = PreparedStatementInput.builder()
                .queryString(query)
                .build();

        StartQueryExecutionRequest request = StartQueryExecutionRequest.builder()
                .queryExecutionContext(QueryExecutionContext.builder().database("my_database").build())
                .resultConfiguration(ResultConfiguration.builder().outputLocation("s3://my-bucket/my-prefix/").build())
                .workGroup("my-workgroup")
                .parameters(ParameterMap.builder()
                        .put("param1", "value1")
                        .put("param2", "value2")
                        .build())
                .build();

        try {
            StartQueryExecutionResponse response = client.startQueryExecution(request);
            String queryExecutionId = response.queryExecutionId();

            GetQueryExecutionRequest getQueryExecutionRequest = GetQueryExecutionRequest.builder()
                    .queryExecutionId(queryExecutionId)
                    .build();

            QueryExecution execution = null;
            while (true) {
                GetQueryExecutionResponse getQueryExecutionResponse = client.getQueryExecution(getQueryExecutionRequest);
                execution = getQueryExecutionResponse.queryExecution();
                if (execution.status().state() == QueryExecutionState.FAILED ||
                        execution.status().state() == QueryExecutionState.CANCELLED ||
                        execution.status().state() == QueryExecutionState.SUCCEEDED) {
                    break;
                }
                Thread.sleep(1000);
            }

            if (execution.status().state() == QueryExecutionState.SUCCEEDED) {
                GetQueryResultsRequest getQueryResultsRequest = GetQueryResultsRequest.builder()
                        .queryExecutionId(queryExecutionId)
                        .build();
                GetQueryResultsResponse getQueryResultsResponse = client.getQueryResults(getQueryResultsRequest);

                for (Row row : getQueryResultsResponse.resultSet().rows()) {
                    // process row data
                }
            } else {
                System.err.println("Query execution failed with state " + execution.status().state());
            }
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        } catch (Exception e) {
            System.err.println("Query execution failed: " + e.getMessage());
        }
    }
}
