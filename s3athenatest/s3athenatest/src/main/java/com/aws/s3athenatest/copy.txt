import org.json.JSONArray;
import org.json.JSONObject;

public class TransactionProcessor {

    public static JSONObject processTransactions(JSONObject inputJson) {
        JSONObject outputJson = new JSONObject();

        // Extract transaction batch id
        String batchId = inputJson.optString("transaction_batch_id");
        outputJson.put("transaction_batch_id", batchId);

        JSONObject transactionSummary = new JSONObject();

        JSONArray transactions = inputJson.getJSONArray("transactions");

        // Calculate currency totals
        JSONObject currencyTotals = new JSONObject();
        for (int i = 0; i < transactions.length(); i++) {
            JSONObject transaction = transactions.getJSONObject(i);
            String currency = transaction.getString("currency");
            double amount = transaction.getDouble("amount");
            currencyTotals.put(currency, currencyTotals.optDouble(currency) + amount);
        }
        transactionSummary.put("currency_totals", currencyTotals);

        // Count transactions per merchant
        JSONObject merchantTransactionCounts = new JSONObject();
        for (int i = 0; i < transactions.length(); i++) {
            JSONObject transaction = transactions.getJSONObject(i);
            String merchant = transaction.getString("merchant");
            merchantTransactionCounts.put(merchant, merchantTransactionCounts.optInt(merchant) + 1);
        }
        transactionSummary.put("merchant_transaction_counts", merchantTransactionCounts);

        // Group transactions by customer ID
        JSONObject transactionsPerCustomer = new JSONObject();
        for (int i = 0; i < transactions.length(); i++) {
            JSONObject transaction = transactions.getJSONObject(i);
            String customerId = transaction.getString("customer_id");
            String transactionId = transaction.getString("transaction_id");
            JSONArray customerTransactions = transactionsPerCustomer.optJSONArray(customerId);
            if (customerTransactions == null) {
                customerTransactions = new JSONArray();
            }
            customerTransactions.put(transactionId);
            transactionsPerCustomer.put(customerId, customerTransactions);
        }
        transactionSummary.put("transactions_per_customer", transactionsPerCustomer);

        // Find the highest transaction amount
        JSONObject highestTransaction = new JSONObject();
        double highestAmount = Double.MIN_VALUE;
        String highestTransactionId = "";
        for (int i = 0; i < transactions.length(); i++) {
            JSONObject transaction = transactions.getJSONObject(i);
            double amount = transaction.getDouble("amount");
            if (amount > highestAmount) {
                highestAmount = amount;
                highestTransactionId = transaction.getString("transaction_id");
                highestTransaction.put("transaction_id", highestTransactionId);
                highestTransaction.put("amount", highestAmount);
                highestTransaction.put("currency", transaction.getString("currency"));
                highestTransaction.put("merchant", transaction.getString("merchant"));
                highestTransaction.put("customer_id", transaction.getString("customer_id"));
            }
        }
        transactionSummary.put("highest_transaction_amount", highestTransaction);

        outputJson.put("transaction_summary", transactionSummary);

        return outputJson;
    }

    public static void main(String[] args) {
        // Example usage
        JSONObject inputJson = new JSONObject(/* Your input JSON as string */);
        JSONObject outputJson = processTransactions(inputJson);
        System.out.println(outputJson.toString(4)); // Print output JSON with indentation
    }
}

