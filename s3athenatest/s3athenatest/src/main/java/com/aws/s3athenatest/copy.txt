import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;
import software.amazon.awssdk.services.s3.S3Client;
import software.amazon.awssdk.services.s3.model.*;

import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

@RunWith(PowerMockRunner.class)
@PrepareForTest({S3ConnectionController.class, S3TransferManager.class})
public class S3ServiceTest {

    @Mock
    private S3Client mockS3Client;

    @Mock
    private S3TransferManager mockTransferManager;

    private S3Service s3Service;

    @Before
    public void setUp() {
        PowerMockito.mockStatic(S3ConnectionController.class);
        when(S3ConnectionController.getS3ClientSession()).thenReturn(mockS3Client);
        when(S3ConnectionController.getS3TransferMangerSession()).thenReturn(mockTransferManager);

        s3Service = new S3Service();
    }

    @Test
    public void testCopyObject() {
        // Mock the copy operation
        Copy copy = PowerMockito.mock(Copy.class);
        CompletedCopy completedCopy = CompletedCopy.builder()
                .response(CopyObjectResponse.builder().copyObjectResult(CopyObjectResult.builder().eTag("ETAG").build()).build())
                .build();

        when(mockTransferManager.copy(any(CopyRequest.class))).thenReturn(copy);
        when(copy.completionFuture()).thenReturn(completedCopy);

        // Test data
        String bucketName = "sourceBucket";
        String key = "sourceKey";
        String destinationBucket = "destinationBucket";
        String destinationKey = "destinationKey";

        // Perform the copy operation
        String eTag = s3Service.copyObject(bucketName, key, destinationBucket, destinationKey);

        // Verify the interactions and assertions
        Assert.assertEquals("ETAG", eTag);
        PowerMockito.verifyStatic(S3ConnectionController.class);
        S3ConnectionController.getS3ClientSession();
        PowerMockito.verifyStatic(S3ConnectionController.class);
        S3ConnectionController.getS3TransferMangerSession();
        PowerMockito.verify(mockTransferManager).copy(any(CopyRequest.class));
        PowerMockito.verify(copy).completionFuture();
    }
}
