private static List<SqlQueryInfo> extractQueriesFromFile(File file) {
    List<SqlQueryInfo> sqlQueryList = new ArrayList<>();

    try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
        StringBuilder fileContent = new StringBuilder();
        String line;

        // Read the entire file into a single string
        while ((line = reader.readLine()) != null) {
            fileContent.append(line).append(" ");
        }

        // Convert to lowercase for case-insensitive search
        String lowerContent = fileContent.toString().toLowerCase();

        // Use a more flexible pattern for cs_bsp_report_query
        String patternString = "\\bcs_bsp_report_query\\s*\\(";
        Pattern pattern = Pattern.compile(patternString);
        
        // Find occurrences of the pattern
        Matcher matcher = pattern.matcher(lowerContent);
        while (matcher.find()) {
            // Find the starting index of the pattern
            int index = matcher.start();

            // Find the next opening parenthesis after the pattern
            int openIndex = lowerContent.indexOf("(", index);

            if (openIndex != -1) {
                // Find the closing parenthesis corresponding to the opening parenthesis
                int closeIndex = findClosingParenthesis(lowerContent, openIndex);

                if (closeIndex != -1) {
                    // Extract the content inside the parentheses
                    String insideParentheses = fileContent.substring(openIndex + 1, closeIndex);
                    processExtractedContent(file, insideParentheses, sqlQueryList);
                }
            }
        }

    } catch (IOException e) {
        e.printStackTrace();
    }

    return sqlQueryList;
}
String patternString = "\\bcs_bsp_report_query\\b.*\\bvalues\\s*\\(";
