
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class FileLister {
    public static List<File> getAllFilesInDirectory(String directoryPath) {
        File directory = new File(directoryPath);

        if (!directory.exists() || !directory.isDirectory()) {
            throw new IllegalArgumentException("Invalid directory path: " + directoryPath);
        }

        return Optional.ofNullable(directory.listFiles())
                .map(Stream::of)
                .orElseGet(Stream::empty)
                .flatMap(file -> file.isFile() ? Stream.of(file) : getAllFilesInDirectory(file.getAbsolutePath()).stream())
                .collect(Collectors.toList());
    }

    public static void main(String[] args) {
        String directoryPath = "/path/to/directory";

        try {
            List<File> fileList = getAllFilesInDirectory(directoryPath);

            // Print the list of files
            fileList.forEach(file -> System.out.println(file.getAbsolutePath()));
        } catch (IllegalArgumentException e) {
            System.out.println(e.getMessage());
        }
    }
}
