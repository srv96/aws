private static void processExtractedContent(File file, String insideParentheses, List<SqlQueryInfo> sqlQueryList) {
    // Remove leading and trailing spaces
    insideParentheses = insideParentheses.trim();

    // Find the index of 'sysdate'
    int sysdateIndex = insideParentheses.indexOf("sysdate");

    if (sysdateIndex != -1) {
        // Extract the substring before 'sysdate'
        String contentBeforeSysdate = insideParentheses.substring(0, sysdateIndex).trim();

        // Find the last occurrence of single quote in the substring before 'sysdate'
        int lastQuoteIndex = contentBeforeSysdate.lastIndexOf('\'');

        if (lastQuoteIndex != -1) {
            // Extract the sqlQuery
            String sqlQuery = contentBeforeSysdate.substring(lastQuoteIndex + 1);

            // Find the indices of commas to extract reportId and sqlId
            int firstCommaIndex = contentBeforeSysdate.lastIndexOf(',', lastQuoteIndex);
            int secondCommaIndex = contentBeforeSysdate.lastIndexOf(',', firstCommaIndex - 1);

            if (firstCommaIndex != -1 && secondCommaIndex != -1) {
                // Extract reportId and sqlId
                String reportIdString = contentBeforeSysdate.substring(secondCommaIndex + 1, firstCommaIndex).trim();
                String sqlIdString = contentBeforeSysdate.substring(firstCommaIndex + 1, lastQuoteIndex).trim();

                // Create SqlQueryInfo and add to the list
                try {
                    int reportId = Integer.parseInt(reportIdString);
                    int sqlId = Integer.parseInt(sqlIdString);

                    String fileName = file.getName().replace("On-Boarding Sqls - ", "").replace(".sql", "");

                    sqlQueryList.add(new SqlQueryInfo(reportId, fileName, sqlId, sqlQuery));
                } catch (NumberFormatException e) {
                    // Handle parsing errors if needed
                    e.printStackTrace();
                }
            }
        }
    }
}
