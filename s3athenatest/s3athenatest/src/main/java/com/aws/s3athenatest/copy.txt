
import java.util.HashMap;
import java.util.Map;
import org.apache.hadoop.fs.FileStatus;

public class FileDownloader {

    // Method to accept the Map representing file status and download status
    public static void monitorDownloadStatus(Map<FileStatus, Boolean> downloadStatusMap) {
        int totalFiles = downloadStatusMap.size();

        while (downloadStatusMap.values().stream().filter(Boolean::booleanValue).count() < totalFiles) {
            double progressPercentage = (downloadStatusMap.values().stream().filter(Boolean::booleanValue).count() * 100.0) / totalFiles;
            System.out.println("Download Progress: " + progressPercentage + "%");

            try {
                Thread.sleep(10000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }

        System.out.println("All files downloaded!");
    }

    public static void main(String[] args) {
        // Assume you have a downloadStatusMap with FileStatus and their download status
        Map<FileStatus, Boolean> downloadStatusMap = new HashMap<>();

        // Populate the downloadStatusMap here with FileStatus objects and their download status
        // For example:
        // downloadStatusMap.put(fileStatus1, true);
        // downloadStatusMap.put(fileStatus2, false);
        // downloadStatusMap.put(fileStatus3, true);
        // Add more FileStatus and their status as needed

        // Create a new thread to run the monitoring code
        Thread monitoringThread = new Thread(() -> monitorDownloadStatus(downloadStatusMap));
        monitoringThread.start();

        // Perform other tasks here...

        // Wait for the monitoring thread to finish (optional)
        try {
            monitoringThread.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
